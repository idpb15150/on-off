import React, { useState, useEffect } from "react";
import { useNavigate, useLocation } from "react-router-dom";
import Cookies from "js-cookie";

const LoginPage = () => {
  const [userInput, setUserInput] = useState("");
  const [passwordInput, setPasswordInput] = useState("");
  const [error, setError] = useState("");
  const navigate = useNavigate();
  const location = useLocation();

  useEffect(() => {
    if (location.state?.message) {
      setError(location.state.message);
    }
  }, [location.state]);

  const handleLogin = async (e) => {
    e.preventDefault();
    setError("");

    try {
      console.log("üöÄ ‡πÄ‡∏£‡∏¥‡πà‡∏° Login");

      // ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ
      const res = await fetch("http://192.168.23.32:1880/userr", { cache: "no-store" });
      if (!res.ok) throw new Error("‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ API ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à");

      const users = await res.json();
      const foundUser = users.find(
        (u) => u.user === userInput && u.password === passwordInput
      );

      if (!foundUser) {
        setError("‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ‡∏´‡∏£‡∏∑‡∏≠‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô‡πÑ‡∏°‡πà‡∏ñ‡∏π‡∏Å‡∏ï‡πâ‡∏≠‡∏á");
        return;
      }

      // ‡∏ï‡∏±‡πâ‡∏á cookie ‡πÉ‡∏´‡πâ session ‡∏≠‡∏¢‡∏π‡πà‡πÑ‡∏î‡πâ 15 ‡∏ô‡∏≤‡∏ó‡∏µ
      const expireTime = Date.now() + 15 * 60 * 1000;
      Cookies.set("token", foundUser.id, { expires: 1 / 96 }); // 15 ‡∏ô‡∏≤‡∏ó‡∏µ
      Cookies.set("expireTime", expireTime.toString(), { expires: 1 / 96 });

      // ‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å log ‡∏Å‡∏≤‡∏£ login ‡πÑ‡∏õ‡∏ó‡∏µ‡πà Express API
      const payload = {
        user: foundUser.user,
        name: foundUser.name,
        login_time: new Date().toISOString().slice(0, 19).replace("T", " "),
      };

      const saveLoginUrl = "http://192.168.23.32:5899/saveLogin";

      fetch(saveLoginUrl, {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify(payload)
      })
        .then(async (res) => {
          const text = await res.text(); // ‡∏≠‡πà‡∏≤‡∏ô response ‡πÄ‡∏õ‡πá‡∏ô text ‡∏Å‡πà‡∏≠‡∏ô
          try {
            const data = JSON.parse(text); // ‡πÅ‡∏õ‡∏•‡∏á‡πÄ‡∏õ‡πá‡∏ô JSON
            console.log("‚úÖ ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å log ‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", data);
          } catch {
            console.error("‚ùå Response ‡πÑ‡∏°‡πà‡πÉ‡∏ä‡πà JSON:", text);
          }
        })
        .catch((err) => console.error("‚ùå ‡∏ö‡∏±‡∏ô‡∏ó‡∏∂‡∏Å log ‡πÑ‡∏°‡πà‡∏™‡∏≥‡πÄ‡∏£‡πá‡∏à:", err));

      // ‡πÑ‡∏õ‡∏´‡∏ô‡πâ‡∏≤ Dashboard
      navigate("/");
    } catch (err) {
      console.error("‚ùå ‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î:", err);
      setError("‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡πÄ‡∏ä‡∏∑‡πà‡∏≠‡∏°‡∏ï‡πà‡∏≠ API");
    }
  };

  return (
    <div className="w-screen h-screen flex flex-col items-center justify-center bg-gradient-to-br from-gray-900 via-gray-800 to-gray-900 px-4">
      <img
        src="http://192.168.23.32:9000/images/2025/07/24/logovenine-1.jpg"
        alt="Logo"
        className="w-48 h-auto mb-8"
      />
      <div className="bg-gray-800 p-10 rounded-3xl shadow-2xl w-full max-w-md mx-4">
        <h2 className="text-3xl font-bold mb-6 text-center text-white">‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö</h2>

        {error && <p className="text-red-500 mb-4 text-center font-medium">{error}</p>}

        <form onSubmit={handleLogin} className="space-y-4">
          <input
            type="text"
            placeholder="‡∏ä‡∏∑‡πà‡∏≠‡∏ú‡∏π‡πâ‡πÉ‡∏ä‡πâ"
            value={userInput}
            onChange={(e) => setUserInput(e.target.value)}
            className="w-full px-4 py-3 rounded-lg bg-gray-700 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500"
          />
          <input
            type="password"
            placeholder="‡∏£‡∏´‡∏±‡∏™‡∏ú‡πà‡∏≤‡∏ô"
            value={passwordInput}
            onChange={(e) => setPasswordInput(e.target.value)}
            className="w-full px-4 py-3 rounded-lg bg-gray-700 text-white placeholder-gray-400 focus:outline-none focus:ring-2 focus:ring-blue-500"
          />
          <button
            type="submit"
            className="w-full py-3 rounded-lg bg-blue-600 hover:bg-blue-500 text-white font-semibold transition-colors duration-200"
          >
            ‡πÄ‡∏Ç‡πâ‡∏≤‡∏™‡∏π‡πà‡∏£‡∏∞‡∏ö‡∏ö
          </button>
        </form>
      </div>
    </div>
  );
};

export default LoginPage;
